NMAP scans

tcp.flags == 2 // Only SYN flag
tcp.flags.syn == 1 // SYN flag is set. The rest of the bits are not important

tcp.flags == 16 // Only ACK flag
tcp.flags.ack == 1 // ACK flag is set. The rest of the bits are not important

tcp.flags == 18 // Only SYN, ACK flags
(tcp.flags.syn == 1) and (tcp.flags.ack == 1) // SYN and ACK are set. The rest of the bits are not important

tcp.flags == 4 // Only RST flag
tcp.flags.reset == 1 // RST flag is set. The rest of the bits are not important

tcp.flags == 20 // Only RST, ACK flags
(tcp.flags.reset == 1) and (tcp.flags.ack == 1) // RST and ACK are set. The rest of the bits are not important

tcp.flags == 1 // Only FIN flag
tcp.flags.fin == 1 // FIN flag is set. The rest of the bits are not important

TCP Connect Scan in a nutshell:
•	Relies on the three-way handshake (needs to finish the handshake process).
•	Usually conducted with nmap -sT command.
•	Used by non-privileged users (only option for a non-root user).
•	Usually has a windows size larger than 1024 bytes as the request expects some data due to the nature of the protocol.

Open TCP Port
•	SYN -->
•	<-- SYN, ACK
•	ACK -->	

Open TCP Port
SYN -->
<-- SYN, ACK
ACK -->
RST, ACK -->	

Closed TCP Port
SYN -->
<-- RST, ACK

Filter: tcp.flags.syn==1 and tcp.flags.ack==0 and tcp.window_size > 1024 // TCP Connect scan pattern

TCP SYN Scan in a nutshell:
•	Doesn't rely on the three-way handshake (no need to finish the handshake process).
•	Usually conducted with nmap -sS command.
•	Used by privileged users.
•	Usually have a size less than or equal to 1024 bytes as the request is not finished and it doesn't expect to receive data.

Open TCP Port
SYN -->
<-- SYN,ACK
RST-->

Close TCP Port
SYN -->
<-- RST,ACK

Example: tcp.flags.syn==1 and tcp.flags.ack==0 and tcp.window_size <= 1024

UDP scan pattern
icmp.type==3 and icmp.code==3

